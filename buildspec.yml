version: 0.2

env:
  variables:
    DOCKERHUB_USERNAME: "your-dockerhub-username"
phases:
  install:
    commands:
      - apt-get update -y && apt-get install -y git jq
      - pip install -r requirements.txt
  pre_build:
    commands:
      - echo "This is CodeCommit Repo URL - $CODEBUILD_SOURCE_REPO_URL"
      - |
        REPO_NAME=$(echo "$CODEBUILD_SOURCE_REPO_URL" | awk -F "/" '{print $NF}')
        BRANCH_NAME=$(echo "$CODEBUILD_SOURCE_VERSION" | awk -F "/" '{print $NF}')
        echo "BRANCH_NAME is : $BRANCH_NAME"
        echo "CODEBUILD_SOURCE_REPO_URL is : $CODEBUILD_SOURCE_REPO_URL"
        echo "CODEBUILD_SOURCE_VERSION is : $CODEBUILD_SOURCE_VERSION"
      - echo "This is CodeCommit Repo Name - $REPO_NAME"
      - echo "This is the CODEBUILD_SRC_DIR - $CODEBUILD_SRC_DIR"
      - echo "This is the commit id from Source Control - $CODEBUILD_RESOLVED_SOURCE_VERSION"
  build:
    commands:
      - echo "inside build commands and printing all the environment variables below"
      - printenv
      - echo `pwd`
  post_build:
    commands:
      - |
        echo "Fetching DockerHub credentials from AWS Secrets Manager..."
        aws secretsmanager get-secret-value --secret-id dockerhub_credentials --query SecretString --output text > dockerhub_credentials.json

        DOCKERHUB_USERNAME=$(jq -r '.username' dockerhub_credentials.json)
        DOCKERHUB_PASSWORD=$(jq -r '.password' dockerhub_credentials.json)

        echo "Logging in to DockerHub..."
        echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

        WEBAPP_IMAGE="${DOCKERHUB_USERNAME}/webapp"
        webapp_fullname="${WEBAPP_IMAGE}:latest"

        echo "Building and pushing WebApp image..."
        docker buildx build --platform linux/amd64,linux/arm64 -t ${webapp_fullname} --push .

        docker logout

artifacts:
  files:
    - '**/*'
